#!/bin/bash
# Script para verificar e proteger arquivos sens√≠veis

echo "üîí Verifica√ß√£o de Seguran√ßa - Arquivos Sens√≠veis"
echo "================================================="

echo ""
echo "üìã Verificando arquivos .env commitados:"
git ls-files | grep -E "\.env" | while read file; do
    echo "‚ö†Ô∏è  $file (commitado)"
done

echo ""
echo "üìã Verificando arquivos sens√≠veis n√£o rastreados:"
find . -name "*.env.local" -o -name "*.env.development.local" -o -name "*.env.production.local" | grep -v node_modules | while read file; do
    echo "‚úÖ $file (ignorado)"
done

echo ""
echo "üìã Verificando certificados e chaves:"
find . -name "*.pem" -o -name "*.key" -o -name "*.crt" | grep -v node_modules | while read file; do
    if git ls-files | grep -q "$file"; then
        echo "‚ö†Ô∏è  $file (commitado - ATEN√á√ÉO!)"
    else
        echo "‚úÖ $file (ignorado)"
    fi
done

echo ""
echo "üìã Verificando conte√∫do de arquivos .env commitados:"
for file in $(git ls-files | grep -E "\.env"); do
    echo ""
    echo "üîç Analisando $file:"
    if grep -q "GOOGLE_CLIENT_ID\|SECRET\|PASSWORD\|TOKEN\|KEY" "$file" 2>/dev/null; then
        echo "‚ö†Ô∏è  Cont√©m informa√ß√µes potencialmente sens√≠veis!"
        grep -E "GOOGLE_CLIENT_ID|SECRET|PASSWORD|TOKEN|KEY" "$file" | head -3
    else
        echo "‚úÖ Parece seguro"
    fi
done

echo ""
echo "üõ°Ô∏è  Recomenda√ß√µes de Seguran√ßa:"
echo "1. Remover arquivos .env.* do hist√≥rico do git se contiverem dados sens√≠veis"
echo "2. Usar apenas .env.example com valores fict√≠cios"
echo "3. Configurar .env.local apenas localmente"
echo "4. Nunca commitar certificados SSL ou chaves privadas"
echo ""
echo "Para remover arquivo sens√≠vel do hist√≥rico:"
echo "git filter-branch --force --index-filter 'git rm --cached --ignore-unmatch ARQUIVO' --prune-empty --tag-name-filter cat -- --all"
